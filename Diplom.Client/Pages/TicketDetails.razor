@page "/ticket/{Id:int}"
@using Diplom.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Деталі тікету</h3>

@if (ticket == null)
{
    <p><em>Завантаження...</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-3">Назва</dt>
        <dd class="col-sm-9">@ticket.Title</dd>

        <dt class="col-sm-3">Опис</dt>
        <dd class="col-sm-9">@ticket.Description</dd>

        <dt class="col-sm-3">Категорія</dt>
        <dd class="col-sm-9">@ticket.Category</dd>

        <dt class="col-sm-3">Локація</dt>
        <dd class="col-sm-9">@ticket.Location</dd>

        <dt class="col-sm-3">Тип</dt>
        <dd class="col-sm-9">@ticket.Type</dd>
    </dl>

    <button class="btn btn-primary me-2" @onclick="Edit">Редагувати</button>
    <button class="btn btn-danger me-2" @onclick="Delete">Видалити</button>
    <button class="btn btn-secondary" @onclick="OpenChat">Відкрити чат</button>
}

@code {
    [Parameter] public int Id { get; set; }

    private Ticket? ticket;

    protected override async Task OnInitializedAsync()
    {
        ticket = await Http.GetFromJsonAsync<Ticket>($"api/tickets/{Id}");
    }

    private void Edit()
    {
        Navigation.NavigateTo($"/edit-ticket/{Id}");
    }

    private async Task Delete()
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", "Ви впевнені, що хочете видалити цей тікет?");
        if (confirm)
        {
            var response = await Http.DeleteAsync($"api/tickets/{Id}");
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/tickets");
            }
        }
    }

    private void OpenChat()
    {
        Navigation.NavigateTo($"/chat/{Id}");
    }

    [Inject] IJSRuntime JS { get; set; } = default!;
}