@page "/tickets"
@using Diplom.Shared
@using Diplom.Shared.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@inject ToastService ToastService

<h3 class="text-center my-4">Список тікетів</h3>

@if (isLoading)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (isUnauthorized)
{
    <div class="text-center text-danger mt-5">
        <p>Неавторизований доступ. Увійдіть заново.</p>
    </div>
}
else if (tickets == null || !tickets.Any())
{
    <div class="text-center text-muted mt-5">
        <p>Немає доступних тікетів</p>
    </div>
}
else
{
    <div class="row">
        @foreach (var ticket in tickets)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@ticket.Title</h5>
                        <p class="card-text">@ticket.Description</p>
                        <button class="btn btn-primary" @onclick="() => ViewTicket(ticket.Id)">Переглянути</button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Ticket> tickets;
    private bool isLoading = true;
    private bool isUnauthorized = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (!user.Identity?.IsAuthenticated ?? true)
            {
                Navigation.NavigateTo("/login");
                return;
            }

            tickets = await Http.GetFromJsonAsync<List<Ticket>>("api/tickets");
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Помилка завантаження тікетів: {ex.Message}");
            isUnauthorized = true;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ViewTicket(int ticketId)
    {
        Navigation.NavigateTo($"/ticket-details/{ticketId}");
    }
}
