@page "/tickets"
@using Diplom.Shared.Models
@inject Diplom.Client.Services.ApiService ApiService
@inject NavigationManager NavigationManager

<h3>Запити та Пропозиції</h3>

<button class="btn btn-success mb-3" @onclick="ShowModal">Створити новий тікет</button>

@if (tickets == null)
{
    <p>Завантаження...</p>
}
else
{
    <ul class="list-group">
        @foreach (var ticket in tickets)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <strong>@ticket.Category</strong> | @ticket.Location | @ticket.Type<br />
                    <em>@ticket.Title</em> - @ticket.Description
                </div>
                <div>
                    <button class="btn btn-danger btn-sm me-2" @onclick="() => ConfirmDelete(ticket.Id)">Видалити</button>
                    <a class="btn btn-primary btn-sm me-2" href="@($"/tickets/{ticket.Id}/chat")">Чат</a>
                    @if (newMessages.ContainsKey(ticket.Id))
                    {
                        <span class="badge bg-danger">@newMessages[ticket.Id]</span>
                    }
                </div>
            </li>
        }
    </ul>
}

@if (showCreateModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Створити новий тікет</h5>
                    <button type="button" class="btn-close" @onclick="HideModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="newTicket" OnValidSubmit="HandleCreateTicket">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group mb-3">
                            <InputText @bind-Value="newTicket.Category" class="form-control" placeholder="Категорія *" />
                        </div>
                        <div class="form-group mb-3">
                            <InputText @bind-Value="newTicket.Location" class="form-control" placeholder="Локація *" />
                        </div>
                        <div class="form-group mb-3">
                            <InputSelect @bind-Value="newTicket.Type" class="form-control">
                                <option value="">-- Виберіть тип --</option>
                                <option value="Request">Потребую допомогу</option>
                                <option value="Offer">Пропоную допомогу</option>
                            </InputSelect>
                        </div>
                        <div class="form-group mb-3">
                            <InputText @bind-Value="newTicket.Title" class="form-control" placeholder="Заголовок" />
                        </div>
                        <div class="form-group mb-3">
                            <InputTextArea @bind-Value="newTicket.Description" class="form-control" placeholder="Опис" rows="3" />
                        </div>

                        <button type="submit" class="btn btn-primary">Створити</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@if (showConfirmDeleteModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Підтвердження видалення</h5>
                </div>
                <div class="modal-body">
                    <p>Ви впевнені, що хочете видалити цей тікет?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="HideConfirmDeleteModal">Скасувати</button>
                    <button class="btn btn-danger" @onclick="DeleteConfirmed">Видалити</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Ticket> tickets;
    private Ticket newTicket = new Ticket();
    private bool showCreateModal = false;
    private bool showConfirmDeleteModal = false;
    private int deleteTicketId;
    private Dictionary<int, int> newMessages = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadTicketsAsync();
    }

    private async Task LoadTicketsAsync()
    {
        var response = await ApiService.GetTicketsAsync();
        if (response.IsSuccessStatusCode)
        {
            tickets = await response.Content.ReadFromJsonAsync<List<Ticket>>();
        }
        else
        {
            tickets = new List<Ticket>();
        }
    }

    private async Task HandleCreateTicket()
    {
        var response = await ApiService.PostTicketAsync(newTicket);
        if (response.IsSuccessStatusCode)
        {
            await LoadTicketsAsync();
            newTicket = new Ticket();
            showCreateModal = false;
        }
    }

    private void ShowModal()
    {
        showCreateModal = true;
    }

    private void HideModal()
    {
        showCreateModal = false;
    }

    private void ConfirmDelete(int ticketId)
    {
        deleteTicketId = ticketId;
        showConfirmDeleteModal = true;
    }

    private void HideConfirmDeleteModal()
    {
        showConfirmDeleteModal = false;
    }

    private async Task DeleteConfirmed()
    {
        var response = await ApiService.DeleteTicketAsync(deleteTicketId);
        if (response.IsSuccessStatusCode)
        {
            await LoadTicketsAsync();
        }
        showConfirmDeleteModal = false;
    }
}
