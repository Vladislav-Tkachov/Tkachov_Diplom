@page "/ticket-create"
@page "/ticket-edit/{Id:int}"

@using Diplom.Shared.Models
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>@(isEditMode ? "Редагувати тікет" : "Створити тікет")</h3>

<EditForm Model="@ticket" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Назва:</label>
        <InputText @bind-Value="ticket.Title" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Опис:</label>
        <InputTextArea @bind-Value="ticket.Description" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Категорія:</label>
        <InputText @bind-Value="ticket.Category" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Локація:</label>
        <InputText @bind-Value="ticket.Location" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Тип тікету:</label>
        <InputSelect @bind-Value="ticket.TicketType" class="form-control">
            <option value="">-- Виберіть тип --</option>
            <option value="Запит">Запит</option>
            <option value="Пропозиція">Пропозиція</option>
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Зберегти</button>
</EditForm>

@code {
    [Parameter] public int? Id { get; set; }
    private Ticket ticket = new Ticket();
    private bool isEditMode = false;

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            // Режим редагування
            isEditMode = true;
            var response = await Http.GetAsync($"api/tickets/{Id.Value}");
            if (response.IsSuccessStatusCode)
            {
                ticket = await response.Content.ReadFromJsonAsync<Ticket>();
            }
            else
            {
                // Обробити помилку (наприклад, тікет не знайдено)
            }
        }
        else
        {
            // Режим створення
            isEditMode = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        if (isEditMode)
        {
            // Update
            var response = await Http.PutAsJsonAsync($"api/tickets/{ticket.Id}", ticket);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/tickets");
            }
            else
            {
                // Обробити помилку
            }
        }
        else
        {
            // Create
            var response = await Http.PostAsJsonAsync("api/tickets", ticket);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/tickets");
            }
            else
            {
                // Обробити помилку
            }
        }
    }
}