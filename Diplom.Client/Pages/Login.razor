@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject Client.Auth.CustomAuthStateProvider AuthStateProvider

<h3>Вхід</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="loginModel.Email" />
    </div>

    <div class="mb-3">
        <label>Пароль:</label>
        <InputText class="form-control" type="password" @bind-Value="loginModel.Password" />
    </div>

    <button class="btn btn-primary" type="submit">Увійти</button>
</EditForm>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger mt-3">@error</div>
}

@code {
    private LoginModel loginModel = new();
    private string error = string.Empty;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("api/auth/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
            await AuthStateProvider.NotifyUserAuthentication(result!.Token);
            Navigation.NavigateTo("/");
        }
        else
        {
            error = await response.Content.ReadAsStringAsync();
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    public class LoginResponse
    {
        public string Token { get; set; } = string.Empty;
    }
}