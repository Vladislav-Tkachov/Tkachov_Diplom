@page "/chat"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<h3>Чат</h3>

<div class="mb-3">
    <InputText @bind-Value="messageInput" placeholder="Введіть повідомлення" class="form-control" />
    <button class="btn btn-primary mt-2" @onclick="SendMessage">Надіслати</button>
</div>

<ul class="list-group">
    @foreach (var msg in messages)
    {
        <li class="list-group-item">@msg</li>
    }
</ul>

@code {
    private HubConnection hubConnection;
    private string messageInput;
    private List<string> messages = new List<string>();
    private string currentUser = "User";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            currentUser = user.Identity.Name;
        }

        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            messages.Add($"{user}: {message}");
            StateHasChanged();
        });

        await hubConnection.StartAsync();

        // Приєднуємося до групи "default" для демонстрації. 
        // В реальному застосунку ви можете приєднуватися до групи, що відповідає ID тікету або іншому ключу.
        await hubConnection.SendAsync("JoinGroup", "default");
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(messageInput))
        {
            await hubConnection.SendAsync("SendMessage", "default", currentUser, messageInput);
            messageInput = string.Empty;
        }
    }
}