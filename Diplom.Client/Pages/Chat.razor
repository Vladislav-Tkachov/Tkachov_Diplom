@page "/chat/{TicketId:int}"
@inject NavigationManager Navigation
@inject HttpClient Http
@using Microsoft.AspNetCore.SignalR.Client

<h3>Чат тікету #@TicketId</h3>

<div class="mb-3">
    <ul>
        @foreach (var message in messages)
        {
            <li><b>@message.User:</b> @message.Text</li>
        }
    </ul>
</div>

<input class="form-control mb-2" placeholder="Ваше ім'я" @bind="user" />
<textarea class="form-control mb-2" placeholder="Повідомлення" @bind="messageInput"></textarea>
<button class="btn btn-primary" @onclick="SendMessage">Надіслати</button>

@code {
    [Parameter] public int TicketId { get; set; }

    private HubConnection? hubConnection;
    private string user = string.Empty;
    private string messageInput = string.Empty;
    private List<Message> messages = new();

    private string GroupName => $"ticket-{TicketId}";

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/chathub"))
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            messages.Add(new Message { User = user, Text = message });
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
        await hubConnection.SendAsync("JoinGroup", GroupName);
    }

    private async Task SendMessage()
    {
        if (hubConnection is not null && hubConnection.State == HubConnectionState.Connected)
        {
            await hubConnection.SendAsync("SendMessage", GroupName, user, messageInput);
            messageInput = string.Empty;
        }
    }

    private class Message
    {
        public string User { get; set; } = string.Empty;
        public string Text { get; set; } = string.Empty;
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection != null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}