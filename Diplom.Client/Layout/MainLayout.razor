@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject Client.Auth.CustomAuthStateProvider AuthProvider
@using Microsoft.AspNetCore.Components.Authorization

<PageTitle>Diplom</PageTitle>

<AuthorizeView>
    <Authorized>
        <div class="d-flex justify-content-end m-2">
            <button class="btn btn-outline-secondary me-2" @onclick="Logout">Вийти</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="d-flex justify-content-end m-2">
            <button class="btn btn-outline-primary me-2" @onclick='() => Navigation.NavigateTo("/login")'>Вхід</button>
            <button class="btn btn-outline-success" @onclick='() => Navigation.NavigateTo("/register")'>Реєстрація</button>
        </div>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView>
    <Authorized>
        <div class="m-2">
            <button class="btn btn-success" @onclick='() => Navigation.NavigateTo("/createticket")'>Створити тікет</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <p class="text-danger m-2">Для доступу до створення тікетів необхідна авторизація.</p>
    </NotAuthorized>
</AuthorizeView>

<LayoutView>
    @Body
</LayoutView>

@code {
    private async Task Logout()
    {
        await AuthProvider.NotifyUserLogout();
        Navigation.NavigateTo("/");
    }
}

<style>
    .page {
        display: flex;
        flex-direction: row;
        min-height: 100vh;
    }
    .sidebar {
        width: 250px;
        background-color: #f8f9fa;
    }
    .main {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    .top-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #343a40;
        color: white;
        padding: 0.5rem 1rem;
    }
    .content {
        flex: 1;
        padding: 1rem;
    }
</style>