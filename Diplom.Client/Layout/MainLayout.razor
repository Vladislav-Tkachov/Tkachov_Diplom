@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        <button class="btn btn-outline-primary" @onclick="Logout">Вийти</button>
    </Authorized>
    <NotAuthorized>
        <button class="btn btn-outline-primary" @onclick='() => Navigation.NavigateTo("/login")'>Вхід</button>
        <button class="btn btn-outline-primary" @onclick='() => Navigation.NavigateTo("/register")'>Реєстрація</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Inject]
    private NavigationManager Navigation { get; set; }

    private async Task Logout()
    {
        if (AuthenticationStateProvider is Client.Auth.CustomAuthStateProvider customAuthStateProvider)
        {
            await customAuthStateProvider.Logout();
            Navigation.NavigateTo("/");
        }
    }
}

<style>
    .page {
        display: flex;
        flex-direction: row;
        min-height: 100vh;
    }
    .sidebar {
        width: 250px;
        background-color: #f8f9fa;
    }
    .main {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    .top-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #343a40;
        color: white;
        padding: 0.5rem 1rem;
    }
    .content {
        flex: 1;
        padding: 1rem;
    }
</style>